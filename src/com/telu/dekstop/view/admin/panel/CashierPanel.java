    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.telu.dekstop.view.admin.panel;

import com.stripbandunk.jwidget.model.DefaultPaginationModel;
import com.stripbandunk.jwidget.model.DynamicTableModel;
import com.telu.dekstop.controller.OrderController;
import com.telu.dekstop.model.Order;
import com.telu.dekstop.model.OrderDetail;
import com.telu.dekstop.model.OrderStatus;
import com.telu.dekstop.util.Database;
import com.telu.dekstop.view.admin.dialog.OrderDetailDialog;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author maula
 */
public class CashierPanel extends javax.swing.JPanel {

    private DynamicTableModel<Order> tableModel;
    private final int PAGE_SIZE = 10;

    /**
     * Creates new form KelolaMenuPanel
     */
    public CashierPanel() {
        initComponents();
        tableModel = new DynamicTableModel<>(Order.class);
        jDynamicTable1.setDynamicModel(tableModel);
        jDynamicTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    public void reload() {
        OrderController controller = new OrderController();
        
        int totalItem = controller.count().intValue();
        DefaultPaginationModel paginationModel = new DefaultPaginationModel(PAGE_SIZE, totalItem);
        jPagination1.setModel(paginationModel);

        List<Order> list = controller.getAllOrders(0, PAGE_SIZE);
        tableModel.clear();
        for (Order order : list) {
            tableModel.add(order);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jDynamicTable1 = new com.stripbandunk.jwidget.JDynamicTable();
        jPagination1 = new com.stripbandunk.jwidget.JPagination();
        jPanel1 = new javax.swing.JPanel();
        btnPayAtCashier = new javax.swing.JButton();
        btnOrderDetail = new javax.swing.JButton();
        btnReceipt = new javax.swing.JButton();
        btnReload = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Menu Kasir");

        jScrollPane1.setViewportView(jDynamicTable1);

        jPagination1.addPaginationListener(new com.stripbandunk.jwidget.listener.PaginationListener() {
            public void onPageChange(com.stripbandunk.jwidget.event.PaginationEvent evt) {
                jPagination1OnPageChange(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        btnPayAtCashier.setText("Tandai Dibayar di Kasir ");
        btnPayAtCashier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayAtCashierActionPerformed(evt);
            }
        });
        jPanel1.add(btnPayAtCashier, new java.awt.GridBagConstraints());

        btnOrderDetail.setText("Tampilkan Detail Pesanan");
        btnOrderDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderDetailActionPerformed(evt);
            }
        });
        jPanel1.add(btnOrderDetail, new java.awt.GridBagConstraints());

        btnReceipt.setText("Tampilkan Struk");
        btnReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceiptActionPerformed(evt);
            }
        });
        jPanel1.add(btnReceipt, new java.awt.GridBagConstraints());

        btnReload.setText("Reload");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });
        jPanel1.add(btnReload, new java.awt.GridBagConstraints());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(539, 539, 539))
            .addComponent(jPagination1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPagination1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnPayAtCashierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayAtCashierActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = jDynamicTable1.getSelectedRow();
        
        if(selectedRow != -1){
            
            Order selectedOrder = tableModel.get(jDynamicTable1.convertRowIndexToModel(selectedRow));
            
            if(selectedOrder.getStatus() == OrderStatus.Lunas){
                JOptionPane.showMessageDialog(this, "Pesanan ini sudah Lunas!");
                return;
            }
            
            int orderId = selectedOrder.getId();
            
            int confirm = JOptionPane.showConfirmDialog(this, "Apakah kamu yakin ingin mengupdate status?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION){
                
                OrderController controller = new OrderController();
                controller.updateStatus(orderId, OrderStatus.Lunas);
                JOptionPane.showMessageDialog(this, "Data status berhasil di update");
                reload();
            }
            
        }else {
            JOptionPane.showMessageDialog(this, "Pilih pesanan terlebih dahulu");
        }
        
    }//GEN-LAST:event_btnPayAtCashierActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        // TODO add your handling code here:
        reload();
    }//GEN-LAST:event_btnReloadActionPerformed

    private void btnOrderDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderDetailActionPerformed
        // TODO add your handling code here:

        int selectedRow = jDynamicTable1.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih pesanan terlebih dahulu.");
            return;
        }

        // Konversi baris terpilih ke model sebenarnya
        Order selectedOrder = tableModel.get(jDynamicTable1.convertRowIndexToModel(selectedRow));

        // Ambil detail pesanan dari database
        OrderController controller = new OrderController();
        List<OrderDetail> details = controller.getDetailByOrderId(selectedOrder.getId());

        // Tampilkan dialog
        OrderDetailDialog dialog = new OrderDetailDialog(details);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);


    }//GEN-LAST:event_btnOrderDetailActionPerformed

    private void btnReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceiptActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = jDynamicTable1.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih pesanan terlebih dahulu.");
            return;
        }
        
        Order selectedOrder = tableModel.get(jDynamicTable1.convertRowIndexToModel(selectedRow));
        int orderId = selectedOrder.getId();
        
        if(selectedOrder.getStatus() == OrderStatus.Belum_Lunas){
            JOptionPane.showMessageDialog(this, "Pesanan ini Belum dibayar!\nTidak dapat mencetak Struk");
            return;
        }
        
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("order_id", orderId);
       
        try {
            JasperDesign jasperDesign = JRXmlLoader.load("src/resources/report/StrukKasir.jrxml");
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, Database.getConnection());
            
            JasperViewer viewer = new JasperViewer(jasperPrint, false);
            viewer.setTitle("Struk Kasir");
            viewer.setVisible(true);
            
        } catch (JRException ex) {
            Logger.getLogger(CashierPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
       
         
    }//GEN-LAST:event_btnReceiptActionPerformed

    private void jPagination1OnPageChange(com.stripbandunk.jwidget.event.PaginationEvent evt) {//GEN-FIRST:event_jPagination1OnPageChange
        // TODO add your handling code here:
        int skip = (evt.getCurrentPage() - 1) * evt.getPageSize();
        int max = evt.getPageSize();

        OrderController controller = new OrderController();
        List<Order> orders = controller.getAllOrders(skip, max);
        tableModel.clear();
        for (Order order : orders) {
            tableModel.add(order);
        }
    }//GEN-LAST:event_jPagination1OnPageChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrderDetail;
    private javax.swing.JButton btnPayAtCashier;
    private javax.swing.JButton btnReceipt;
    private javax.swing.JButton btnReload;
    private com.stripbandunk.jwidget.JDynamicTable jDynamicTable1;
    private javax.swing.JLabel jLabel1;
    private com.stripbandunk.jwidget.JPagination jPagination1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
